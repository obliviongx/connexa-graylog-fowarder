plugins {
    id 'java'
    id "org.owasp.dependencycheck" version "12.0.1"
}

repositories {
    mavenCentral()
}

configurations.configureEach {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'com.fasterxml.jackson.core' && details.requested.getName() == 'jackson-databind') {
            details.useVersion '2.18.2'
        } else if (details.requested.group == 'commons-logging' && details.requested.getName() == 'commons-logging') {
            details.useVersion '1.3.4'
        } else if (details.requested.group == 'org.hibernate.validator' && details.requested.getName() == 'hibernate-validator') {
            details.useVersion '6.2.5.Final'
        } else if (details.requested.group == 'org.openapitools' && details.requested.getName() == 'jackson-databind-nullable') {
            details.useVersion '0.2.6'
        }
    }
}

dependencies {
    implementation platform('software.amazon.awssdk:bom:2.30.2')
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:secretsmanager'

    implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'
    implementation 'com.amazonaws:aws-lambda-java-events:3.14.0'

    implementation 'org.apache.logging.log4j:log4j-api:[2.18.0,)'
    implementation 'org.apache.logging.log4j:log4j-core:[2.18.0,)'
    implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:[2.18.0,)'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.6.0'

    // HTTP client for Graylog API
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'

    implementation 'com.google.guava:guava:33.3.1-jre'

    implementation platform('com.amazonaws:aws-xray-recorder-sdk-bom:2.18.2')
    testImplementation 'com.amazonaws:aws-xray-recorder-sdk-core'
    testImplementation 'com.amazonaws:aws-xray-recorder-sdk-aws-sdk'
    testImplementation 'com.amazonaws:aws-xray-recorder-sdk-aws-sdk-instrumentor'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

test {
    useJUnitPlatform()
}

task packageBig(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
    archiveFileName = "cygrid-s3-graylog-${version}.zip"
}

task packageLibs(type: Zip) {
    into('java/lib') {
        from configurations.runtimeClasspath
    }
}

task packageSmall(type: Zip) {
    from compileJava
    from processResources
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

version = '1.1.3'

build.dependsOn packageBig
